import { PrismaClient } from '@prisma/client';
import { faker } from '@faker-js/faker/locale/ru';

const prisma = new PrismaClient();

const PRODUCTS_TO_ADD = 40;

const categories = [
  '–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã',
  '–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∏',
  '–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∏',
  '–ü—ã–ª–µ—Å–æ—Å—ã',
  '–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã',
  '–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä—ã',
  '–ö—É—Ö–æ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞',
  '–ö–æ–º–ø—å—é—Ç–µ—Ä—ã'
];

const generateProduct = async (categoryId: string) => {
  const name = faker.commerce.productName();
  const timestamp = Date.now();
  const slug = `${name
    .toLowerCase()
    .replace(/[^a-zA-Z–∞-—è–ê-–Ø0-9]+/g, '-')
    .replace(/^-+|-+$/g, '')}-${timestamp}`;

  return {
    name,
    slug,
    description: faker.commerce.productDescription(),
    price: parseFloat(faker.commerce.price({ min: 10000, max: 500000 })),
    isAvailable: true,
    categoryId,
    images: {
      create: Array(3).fill(null).map(() => ({
        url: faker.image.urlLoremFlickr({ category: 'technics' })
      }))
    }
  };
};

async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...');

  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const existingCategories = await prisma.category.findMany();
    
    if (existingCategories.length === 0) {
      console.log('‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–æ–∑–¥–∞—ë–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');
      
      for (const categoryName of categories) {
        await prisma.category.create({
          data: {
            name: categoryName,
            slug: categoryName.toLowerCase().replace(/\s+/g, '-'),
            description: faker.commerce.productDescription()
          }
        });
      }
      
      console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    }

    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    const updatedCategories = await prisma.category.findMany();

    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
    for (let i = 0; i < PRODUCTS_TO_ADD; i++) {
      const randomCategory = updatedCategories[Math.floor(Math.random() * updatedCategories.length)];
      const productData = await generateProduct(randomCategory.id);

      await prisma.product.create({
        data: productData
      });

      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä: ${productData.name}`);
    }

    console.log(`\n‚ú® –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ${PRODUCTS_TO_ADD} —Ç–æ–≤–∞—Ä–æ–≤!`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
  } finally {
    await prisma.$disconnect();
  }
}

main(); 